{
    "asset": {
        "Purpose": "A means through which assets can be tracked.",
        "Fields": {
            "id":             "The Id of the asset to be tracked",
            "name":           "A 64 character name of the asset being tracked. Must be unique.",
            "description":    "A max 340 character description of the asset",
            "purchase_value": "What the asset cost to purchase",
            "serial_key":     "An optional string for the serial, or serial key, that was purchased.",
            "is_archived":    "Whether or not the asset is removed from the system. Default false."
        }
    },
        
    "asset_tag": {
        "Purpose": "A tag of an asset for easier categorizing.",
        "Fields": {
            "id": "Id of the asset binding",
            "asset_id": "The id of the asset to be bound with the tag",
            "tag_id": "The id of the tag to be bound"
        }
    },

    "bill": {
        "Purpose": "An instance of an expense, generally something recurring. ",
        "Fields": {
            "id":             "The id of this instance",
            "expense_id":     "A required field linking to an expense ",
            "amount":         "The cost of the bill on this instance",
            "billing_date":   "The date of the bill"
        }
    },
        
    "bill_transaction": {
        "Purpose": "A binding between a bill and a transaction. One transaction per bill.",
        "Fields": {
            "id":             "The id of the bill being referenced.",
            "transaction_id": "The id of the transaction to be bound."
        }
    },

    "conversation": {
        "Purpose": "A conversation between one or more users.",
        "Fields": {
            "id":         "Identifier of a Conversation",
            "creator_id": "The Id matching a user_account table entry"
        }
    },

    "conversation_participant": {
        "Purpose": "Participant within a conversation. Allows for multi-user chat.",
        "Fields": {
            "id":                 "Identifier of a single participant within a conversation",
            "user_id":            "Id matching a single user_account table value",
            "conversation_id":    "Id matching a single conversation table value"
        }
    },

    "customer": {
        "Purpose": "A customer account for estimates, invoices, and other related customer interactions.",
        "Fields": {
            "id":                     "Identifier for a Customer",
            "company_name":           "Name of the customer company",
            "mailing_address":        "Mailing address of customer company",
            "mailing_postal_code":    "Mailing address postal code of customer company",
            "mailing_country":        "Default country is Canada. This will need updating if we are to expand beyond Canada.",
            "physical_address":       "Null to match mailing address, or physical address of customer company.",
            "physical_postal_code":   "Null to match mailing address, or physical address postal code of customer company",
            "physical_country":       "Null to match mailing address, or physical address country of customer company",
            "phone":                  "Full phone number of customer company",
            "start_date":             "The date and time that the customer's account is created"
        }
    },
        
    "customer_contact": {
        "Purpose": "Provides us with specific contacts and associates that can work with us on behalf of a company. Usually, most companies will have only one contact, but if we are integrating teams that want to use Rabbit, many logins can be associated with a single company.",
        "Fields": {
            "id":                 "References the user account associated with this contact. 1-1 Relationship. ",
            "first_name":         "First name of the contact",
            "last_name":          "Last name of the contact",
            "phone":              "Phone number of the contact",
            "phone_extension":    "The phone extension of the contact",
            "about":              "A max 2000 character length about to describe who the contact is, what they're permitted to authorize/do, and any other relevant details.",
            "is_deleted":         "Whether or not the contact is deleted. Default false."
        }
    },
    "employee": {
        "Purpose": "An employee's file on record. This WILL require encryption eventually. We do not want hackers getting a hold of our employee files.",
        "Fields": {
            "id":             "Id of a user_account relating to this employee. 1-1 relationship.",
            "first_name":     "First name of employee (max 180 characters)",
            "middle_name":    "Middle name of employee (max 180 characters)",
            "last_name":      "Last name of employee (max 180 characters)",
            "phone":          "String representation of employee's phone number",
            "about":          "About me for employee (max 2500 characters)",
            "home_address":   "Home street address of employee",
            "postal_code":    "Postal code of employee",
            "sin":            "SIN of employee",
            "birthday":       "Birthday of employee",
            "is_active":      "Whether or not the employee is with us."
        }
        
    },
    "employment_period": {
        "Purpose": "Describes a period of time that an employee is working with us. If they leave and return, a new employment period will open.",
        "Fields": {
            "id":             "Id of an employment period.",
            "employee_id":    "Id of the employee table entry",
            "start_date":     "Date the employee's employment period started",
            "end_date":       "Date the employee's employment period ends (or null for still here)"
        }
    },
        
    "employee_workday": {
        "Purpose": "Describes a single workday for an employee to be used for payroll.",
        "Fields": {
            "id":           "Id of a single workday ",
            "employee_id":  "The Id of the employee",
            "clock_in":     "When the employee clocks in",
            "clock_out":    "When the employee clocks out"
        }
    },
    
    "expense": {
        "Purpose": "Describes a generalized expense (outflow) that is not payroll. Bills, vehicle expenses, etc",
        "Fields": {
            "id":             "The id of the expense",
            "name":           "A max 64 character long name of the expense/bill",
            "description":    "A max 300 character long description of the expense/bill",
            "is_active":      "Whether or not the expense is still current."
        }
    },
        
    "expense_tag": {
        "Purpose": "The tags are treated like categories of expenses, such as Cost of Goods Sold, Goodwill, etc",
        "Fields": {
            "id":         "The id of the tag-expense pair",
            "expense_id": "The id of the expense to be tagged",
            "tag_id":     "The tag id to be bound"
        }
    },

    "message": {
        "Purpose": "A message for a conversation from a user.",
        "Fields": {
            "id":                 "Identifier of a single message",
            "conversation_id":    "Id of the conversation this message is in.",
            "sender_id":          "The user_account id of the person who sent the message",
            "message":            "The message (max 2400 characters)"
        }
    },
        
    "message_receipt": {
        "Purpose": "Receipts to indicate a message's status on behalf of other users. If a single receipt for a message exists, the message was received by the server.",
        "Fields": {
            "message_id":     "References the message this receipt belongs to. First part to composite key.",
            "recipient_id":   "The recipient receiving the message. Second part to composite key.",
            "received":       "Timestamp of when the message was received by the user. Null if not received by them.",
            "read":           "Timestamp of when the message was read by the user. Null if not read."
        },
        "comments": "Id is a composite between message_id and recipient_id. Since a receipt will only need to be looked up when both the message and receipient are known, a composite key is used here."
    },

    "pay_period": {
        "Purpose": "Describes a pay period for employees",
        "Fields": {
            "id":         "serial PRIMARY KEY,",
            "start_date":  "The starting date of the pay-period",
            "end_date":   "The ending date of the pay-period",
            "pay_date":   "The date the pay is to be provided to employees"
        }
    },
        
    "payroll": {
        "Purpose": "Describes a recorded instance of an employee's pay",
        "Fields": {
            "id": "The id of the payroll instance",
            "employee_id": "The id of the employee for this pay",
            "pay_period_id": "The pay period of this pay"
        }
    },
        
    "payroll_item": {
        "Purpose": "Describes a single entry on an employees pay (deduction/pay/bonus/etc)",
        "Fields": {
            "id":         "The id of an entry on a payroll",
            "payroll_id": "The id of the payroll instance for an employee",
            "name":       "A max 50-character length name of the transaction",
            "amount":     "The unit of money being paid/deducted ($x / quantity)",
            "quantity":   "The quantity of the amount to be paid/deducted (multiplier)"
        }
    },
        
    "payroll_transaction": {
        "Purpose": "Describes the payment of an employee",
        "Fields": {
            "id":             "Id of the employee payroll instance",
            "transaction_id": "Id of the transaction of the employee being paid",
            "memo":           "Optional memo for the transaction. (max 400 characters)"
        }
    },
        
    "user_permission": {
        "Purpose": "A specific permission to be referenced in permission sets. To be populated on database initialize, and never changed. May adjust this to enum in the future.",
        "Fields": {
            "id":     "The Id of the permission",
            "name":   "A max 32 character long name of the permission. Eg: CREATE_INVOICE, READ_ALL_INVOICE, READ_OWNED_INVOICES"
        }
    },
    
    "purchase_order": {
        "Purpose": "A recording of a purchase order for assets to be acquired. This is a finalized agreement between another company and us ",
        "Fields": {
            "id":             "The id of a purchase order",
            "memo": "Optional memo for the purchase order. (max 400 characters)",
            "creator_id":     "The id of the employee that created the purchase order.",
            "opened_on":      "When the purchase order was opened. This is not to be editable client side.",
            "completed_on":   "Null if incomplete, or the timestamp of when it was closed."
        }
    },

    "purchase_order_tag": {
        "Purpose": "A tag bound with a purchase order for easier categorical tracking of purchase orders. One tag per purchase order.",
        "Fields": {
            "id":         "The Id of the purchase order that this tag is attached to.",
            "tag_id":     "The id of the tag to be bound"
        }
    },
        
    "purchase_order_item": {
        "Purpose": "Provides support for an itemized purchase order.",
        "Fields": {
            "id":                 "The Id of the item on a purchase order",
            "purchase_order_id":  "The Id of the purchase order ",
            "name":               "The SKU of the item to be purchased",
            "description":        "A description of the item. Max 360 characters.",
            "quantity":           "The amount of the item to be purchased in the quantity * price equation",
            "price":              "The price of the item to be purchased in the quantity * price equation"
        }
    },

    "purchase_order_transaction": {
        "Purpose": "A transaction binding for a purchase order. Supports multiple transactions.",
        "Fields": {
            "id":                 "The id of a transaction for the purchase order.",
            "purchase_order_id":  "The Id of the purchase order",
            "transaction_id":     "The id of the transaction made"
        }
    },

    "service": {
        "Purpose": "Describes a service that we as a company offer.",
        "Fields": {
            "id":                 "Id of the service entry",
            "name":               "A max 64 character long code for the service. (SKU)",
            "description":        "A max 360 character long description of what the service is. ",
            "price":              "The default price to be used in the price * quantity equation.",
            "default_quantity":   "The default quantity of the service to be used in the price * quantity equation.",
            "is_archived":        "Whether or not the service is still able to be used. Default false."
        }
    },

    "tag": {
        "Purpose": "Global tagging system. Anything that can be tagged references here.",
        "Fields": {
            "id": "The identifier of the tag ",
            "name": "A string, max length 140 characters, of a tag. Required.",
            "red": "An integer between 0 and 255 symbolizing the red in RGBA",
            "blue": "An integer between 0 and 255 symbolizing the blue in RGBA",
            "green": "An integer between 0 and 255 symbolizing the green in RGBA",
            "opacity": "An integer between 0 and 255 symbolizing the opacity in RGBA"
        }
    },

    "transaction": {
        "Purpose": "Describes a single transaction. It is the responsibility of other sections of the application to track why a transaction was made. When an adjustment is made, the original is to be kept. ",
        "Fields": {
            "id":         "The Id of the single transaction",
            "amount":     "The amount of the transaction (positive or negative).",
            "method":     "One of the enum values of transaction_method are stored in here. Describes what method of payment was used to process the transaction.",
            "paid_on":    "The timestamp of when the transaction was made"
        }
    },
        
    "transaction_tag": {
        "Purpose": "Describes a tag to a transaction, in case there is a specific need to categorize transactions (tagging employee name in the payroll transaction, etc)",
        "Fields": {
            "id":         "The Id of the transaction (1-1 relation). No support for multiple tags on a transaction.",
            "tag_id":     "The bound tag Id"
        }
    },
        
    "transaction_adjustment": {
        "Purpose": "Provides an audit-trail automatically when a transaction is updated.",
        "Fields": {
            "id":                         "References the new transaction",
            "original_transaction_id":    "References the origin transaction",
            "memo":                       "A required reason why the transaction was made. Max 400 characters"
        }
    },
        
    "user_account": {
        "Purpose": "Gives customers, employees, and the CRA an account to log in through.",
        "Fields": {
            "id":         "Identifier of a User Account",
            "username":   "What a user will use to log into the system",
            "email":      "The email address of the user",
            "is_active":  "Indicator of whether or not a user account is active"
        }
    },

    "user_account_password": {
        "Purpose": "Special field referring to passwords.",
        "Fields": {
            "id":         "Identifier matching a User Account Id. One-To-One relationship.",
            "hash":       "Hash of the password",
            "salt":       "Salt added to the original",
            "iterations": "The amount of times the hashing algo was ran."
        }
    },

    "user_permission_set": {
        "Purpose": "Provides a true/false value for whether or not a user has a permission. Uses composite key between user/permission. ",
        "Usage":   "Loop through all the permissions, and return a permission set by referencing composite perm/user keys",
        "Fields": {
            "user_id":    "The id of the user this permission belongs to. Part 1 of composite key",
            "perm_id":    "The id of the permission. Part 2 of composite key ",
            "perm":       "The true/false value for the user"
        }
    },

    "workorder": {
        "Purpose": "Provides a workorder that",
        "Fields": {
            "id":             "The Id of a specific workorder",
            "customer_id":    "The customer_id attached to the workorder",
            "rep_id":         "The id of the employee that opened the workorder",
            "open_date":      "Timestamp that defaults to now",
            "close_date":     "The timestamp of when the workorder was closed."
        }
    },
        
    "workorder_contact": {
        "Purpose": "Provides a contact on behalf of a company we can work with. Supports many contacts per workorder.",
        "Fields": {
            "id":             "Id of an entry for contact to be bound with the workorder",
            "workorder_id":   "Id of the workorder to be bound",
            "contact_id":     "The id of the customer contact to be bound"
        }
    },
        
    "workorder_item": {
        "Purpose": "Provides support for an itemized workorder",
        "Fields": {
            "id":             "Id of an item on a workorder",
            "workorder_id":   "Id of the workorder this item belongs to",
            "service_id":     "Id of this item",
            "quantity":       "The quantity of this item"
        }
    },

    "workorder_transaction": {
        "Purpose": "A transaction binding for a workorder. Supports multiple transactions.",
        "Fields": {
            "id":             "Id of a transaction for a workorder.",
            "workorder_id":   "The id of the workorder this transaction is bound to",
            "contact_id":     "The id of the contact that made the transaction",
            "transaction_id": "The id of the transaction that is bound to the workorder"
        }
    },
    "estimate": {
        "Purpose": "Provides support for estimating costs of work before opening a workorder",
        "Fields": {
            "id": "The id of the estimate",
            "customer_id": "The customer_id attached to the estimate",
            "rep_id": "The id of the employee that opened the estimate",
            "open_date": "The timestamp of when the estimate was opened/created",
            "validity_period": "Default 14, but max amount of days the estimate is good for"
        }
    },
    "estimate_item": {
        "Purpose": "A single item on an estimate",
        "Fields": {
            "id": "The id of the entry on the estimate",
            "estimate_id": "The id of the estimate this is attached to",
            "service_id": "The id of the service that is being offered",
            "quantity": "The amount of the item estimated in the quantity * price equation"
        }
    },
    "estimate_contact": {
        "Purpose": "A person we are able to contact with regards to this estimate",
        "Fields": {
            "id": "Id of  this specific entry",
            "estimate_id": "The id of the estimate this is attached to",
            "contact_id": "The id of the contact that we are working with"
        }
    },
    "taskboard": {
        "Purpose": "A personal todo-board for employees",
        "Fields": {
            "id": "Id of  this specific taskboard entry",
            "name": "The nickname the employee gives to the taskboard",
            "creator_id": "The id of the employee that created the taskboard."
        }
    },
    "taskboard_participant": {
        "Purpose": "A person that is able to see the taskboard.",
        "Fields": {
            "id": "The id of this binding participant binding",
            "taskboard_id": "The id of the taskboard to be bound",
            "user_id": "The id of the user to be bound",
            "can_write": "A true/false on whether or not the user is able to write to the board",
            "can_delete": "A true/false on whether or not the user is able to delete on the board",
            "can_invite": "A true/false on whether or not the user is able to add others to the board. Note: User can not grant more permissions than they have."
        }
    },
    "tasklist": {
        "Purpose": "A single todo list",
        "Fields": {
            "id": "The id of the entry of the tasklist",
            "board_id": "The id of the board this tasklist belongs to",
            "name": "A 255 character long tasklist name (the card title)"
        }
    },
    "tasklist_task": {
        "Purpose": "A task that belongs to a specific tasklist. Supports nested tasks.",
        "Fields": {
            "id": "The id of the task in the database",
            "parent_task_id": "Null if it is not nested with anything, or the Id of the task this entry is inside",
            "is_complete": "A true/false value on whether or not the task is complete",
            "message": "The message indicating what the todo is"
        }
    },
    "notification": {
        "Purpose": "Notification objects for the user",
        "Fields": {
            "id": "The id of the notification object",
            "user_id": "The user id the notification belongs to",
            "origin": "A max 400 character long string indicating to the system where the notification came from",
            "message": "A max 400 character long string indicating what the notification is (shown to user)"
        }
    },
    "estimate_lock" : {
        "Purpose": "A lock object to prevent multiple overwrites on estimates",
        "Fields": {
            "id": "The id of an estimate, since there will only ever be 1 lock for 1 estimate.",
            "user_id": "The user that possesses the lock"
        }
    },
    "workorder_lock": {
        "Purpose": "A lock object to prevent multiple overwrites on workorders",
        "Fields": {
            "id": "The id of a workorder, since there will only ever be 1 lock for 1 workorder",
            "user_id": "The user that possesses the lock"
        }
    },
    "purchase_order_lock": {
        "Purpose": "A lock object to prevent multiple overwrites on purchase orders",
        "Fields": {
            "id": "The id of a workorder, since there will only ever be 1 lock for 1 purchase orders",
            "user_id": "The user that possesses the lock"
        }
    },
    "bill_lock": {
        "Purpose": "A lock object to prevent multiple overwrites on bills",
        "Fields": {
            "id": "The id of a workorder, since there will only ever be 1 lock for 1 bills",
            "user_id": "The user that possesses the lock"
        }
    },
    "payroll_lock": {
        "Purpose": "A lock object to prevent multiple overwrites on payrolls",
        "Fields": {
            "id": "The id of a workorder, since there will only ever be 1 lock for 1 payrolls",
            "user_id": "The user that possesses the lock"
        }
    }
}